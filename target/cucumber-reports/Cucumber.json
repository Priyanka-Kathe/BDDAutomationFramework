[
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 302900,
              "status": "passed"
            },
            "match": {
              "location": "EmployeeCRUD.logintoApplication(Scenario)"
            }
          },
          {
            "result": {
              "duration": 132300,
              "status": "passed"
            },
            "match": {
              "location": "EmpTimeSheet.logintoApplication(Scenario)"
            }
          },
          {
            "result": {
              "duration": 77400,
              "status": "passed"
            },
            "match": {
              "location": "BuzzCRUD.logintoApplication(Scenario)"
            }
          },
          {
            "result": {
              "duration": 81000,
              "status": "passed"
            },
            "match": {
              "location": "RecruitmentCRUD.logintoApplication(Scenario)"
            }
          }
        ],
        "line": 28,
        "name": "I am able to add edit and search and delete the  employee",
        "description": "",
        "id": "employee-crud-and-search-operations;i-am-able-to-add-edit-and-search-and-delete-the--employee;;2",
        "after": [
          {
            "result": {
              "duration": 928400200,
              "status": "passed"
            },
            "match": {
              "location": "EmployeeCRUD.closeApplication(Scenario)"
            }
          },
          {
            "result": {
              "duration": 239400,
              "status": "passed"
            },
            "match": {
              "location": "EmpTimeSheet.closeApplication(Scenario)"
            }
          },
          {
            "result": {
              "duration": 142600,
              "status": "passed"
            },
            "match": {
              "location": "BuzzCRUD.closeApplication(Scenario)"
            }
          },
          {
            "result": {
              "duration": 94000,
              "status": "passed"
            },
            "match": {
              "location": "RecruitmentCRUD.closeApplication(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "output": [
              "Starting orange HRM log in page ",
              "Logging in to the OrangeHRM Applciation ",
              "There is some Exception in Fluent Wait checking--  no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//input[@name\u003d\u0027username\u0027]\"}\n  (Session info: chrome\u003d134.0.6998.166)\nFor documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027LAPTOP-B21O0DSL\u0027, ip: \u0027192.168.144.155\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_271\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 134.0.6998.166, chrome: {chromedriverVersion: 134.0.6998.165 (fd886e2cb29..., userDataDir: C:\\Users\\hp\\AppData\\Local\\T...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:55293}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}\nSession ID: d4cb1bdb8899fcb1e094529e017fcabb\n*** Element info: {Using\u003dxpath, value\u003d//input[@name\u003d\u0027username\u0027]}",
              " Error on typeing the text in element after wating !",
              "There is some Exception in Fluent Wait checking--  no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//input[@name\u003d\u0027password\u0027]\"}\n  (Session info: chrome\u003d134.0.6998.166)\nFor documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027LAPTOP-B21O0DSL\u0027, ip: \u0027192.168.144.155\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_271\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 134.0.6998.166, chrome: {chromedriverVersion: 134.0.6998.165 (fd886e2cb29..., userDataDir: C:\\Users\\hp\\AppData\\Local\\T...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:55293}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}\nSession ID: d4cb1bdb8899fcb1e094529e017fcabb\n*** Element info: {Using\u003dxpath, value\u003d//input[@name\u003d\u0027password\u0027]}",
              " Error on typeing the text in element after wating !",
              "There is some Exception in Fluent Wait checking--  Cannot locate an element using xpath\u003d//button[text()\u003d\u0027 Login \u0027]\nFor documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027LAPTOP-B21O0DSL\u0027, ip: \u0027192.168.144.155\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_271\u0027\nDriver info: driver.version: RemoteWebDriver",
              " Error on clicking the element after wating !",
              "There is some Exception in Fluent Wait checking--  no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d134.0.6998.166)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027LAPTOP-B21O0DSL\u0027, ip: \u0027192.168.144.155\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_271\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 134.0.6998.166, chrome: {chromedriverVersion: 134.0.6998.165 (fd886e2cb29..., userDataDir: C:\\Users\\hp\\AppData\\Local\\T...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:55293}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}\nSession ID: d4cb1bdb8899fcb1e094529e017fcabb\n*** Element info: {Using\u003dxpath, value\u003d//h6[text()\u003d\u0027Dashboard\u0027]}",
              " Error on fetching  the text in element after wating !"
            ],
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "result": {
              "duration": 45115711700,
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d134.0.6998.166)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027LAPTOP-B21O0DSL\u0027, ip: \u0027192.168.144.155\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_271\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 134.0.6998.166, chrome: {chromedriverVersion: 134.0.6998.165 (fd886e2cb29..., userDataDir: C:\\Users\\hp\\AppData\\Local\\T...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:55293}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}\nSession ID: d4cb1bdb8899fcb1e094529e017fcabb\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)\r\n\tat java.lang.reflect.Constructor.newInstance(Unknown Source)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)\r\n\tat com.qa.util.CaptureScreenshot.captureImage(CaptureScreenshot.java:21)\r\n\tat com.qa.stepdefinations.EmployeeCRUD.navigate_to_PIM_after_log_in_with_Admin_user(EmployeeCRUD.java:45)\r\n\tat ✽.Given Navigate to PIM after log in with Admin user(EmployeeCRUD.feature:14)\r\n",
              "status": "failed"
            },
            "line": 14,
            "name": "Navigate to PIM after log in with Admin user",
            "match": {
              "location": "EmployeeCRUD.navigate_to_PIM_after_log_in_with_Admin_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 15,
            "name": "I Add employee with  first name as \"AutUserFname\" and mname as \"AutUserMname\" and lName as \"AutUserLname\"",
            "match": {
              "arguments": [
                {
                  "val": "AutUserFname",
                  "offset": 36
                },
                {
                  "val": "AutUserMname",
                  "offset": 64
                },
                {
                  "val": "AutUserLname",
                  "offset": 92
                }
              ],
              "location": "EmployeeCRUD.i_Add_employee_with_first_name_as_and_mname_as_and_lName_as(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 16,
            "name": "I  verify employeeAdded in list with  first name as \"AutUserFname\" and mname as \"AutUserMname\" and lName as \"AutUserLname\"",
            "match": {
              "arguments": [
                {
                  "val": "AutUserFname",
                  "offset": 53
                },
                {
                  "val": "AutUserMname",
                  "offset": 81
                },
                {
                  "val": "AutUserLname",
                  "offset": 109
                }
              ],
              "location": "EmployeeCRUD.i_verify_employeeAdded_in_list_with_first_name_as_and_mname_as_and_lName_as(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 17,
            "name": "I click on Edit button and update below values and save the Data",
            "match": {
              "location": "EmployeeCRUD.i_click_on_Edit_button_and_update_below_values_and_save_the_Data(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "updatefNamevalue",
                  "1"
                ],
                "line": 18
              },
              {
                "cells": [
                  "updatedmName",
                  "1"
                ],
                "line": 19
              },
              {
                "cells": [
                  "updatedLname",
                  "1"
                ],
                "line": 20
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 21,
            "name": "I search the employee and ensure that it is searched using below values",
            "match": {
              "location": "EmployeeCRUD.i_search_the_employee_and_ensure_that_it_is_searched_using_below_values(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "updatefNamevalue",
                  "AutUserFname1"
                ],
                "line": 22
              },
              {
                "cells": [
                  "updatedmName",
                  "AutUserMname1"
                ],
                "line": 23
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "output": [
              "Closing the application",
              "Closing the application",
              "Closing the application",
              "Closing the application"
            ],
            "line": 24,
            "name": "I select and Delete the Updated Employee and verify employee is not  in search result",
            "match": {
              "location": "EmployeeCRUD.i_select_and_Delete_the_Updated_Employee_and_verify_employee_is_not_in_search_result()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 12,
            "name": "@DryRun"
          }
        ]
      }
    ],
    "name": "Employee CRUD and Search Operations",
    "description": "",
    "id": "employee-crud-and-search-operations",
    "keyword": "Feature",
    "uri": "EmployeeCRUD.feature"
  }
]